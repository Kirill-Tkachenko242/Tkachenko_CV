import React, { createContext, useContext, useEffect, useState } from 'react';
import type { Language } from '../types';
import { getInitialLanguage } from '../lib/utils';

interface LanguageContextType {
  language: Language;
  toggleLanguage: () => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations = {
  ru: {
    nav: {
      home: '–ì–ª–∞–≤–Ω–∞—è',
      projects: '–ü—Ä–æ–µ–∫—Ç—ã',
      experience: '–û–ø—ã—Ç',
      contact: '–ö–æ–Ω—Ç–∞–∫—Ç—ã'
    },
    home: {
      greeting: '–ü—Ä–∏–≤–µ—Ç! –Ø, –¢–∫–∞—á–µ–Ω–∫–æ –ö–∏—Ä–∏–ª–ª',
      position: 'Frontend Developer & DevOps Engineer',
      description: '–ó–∞–Ω–∏–º–∞—é—Å—å —Å–æ–∑–¥–∞–Ω–∏–µ–º —É–¥–æ–±–Ω—ã—Ö, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –∫—Ä–∞—Å–∏–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤, –∞ —Ç–∞–∫–∂–µ –∏–∑—É—á–∞—é –ø—Ä–æ—Ü–µ—Å—Å—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. –£–∂–µ –∏–º–µ—é –Ω–µ–±–æ–ª—å—à–æ–π –æ–ø—ã—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Å—Ç—Ä–µ–º–ª—é—Å—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏.',
      viewWork: '–ú–æ–∏ —Ä–∞–±–æ—Ç—ã',
      contact: '–ö–æ–Ω—Ç–∞–∫—Ç—ã'
    },
    projects: {
      title: '–ü—Ä–æ–µ–∫—Ç—ã',
      techStack: '–°—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
      project1: {
        title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD –ø—Ä–æ—Ü–µ—Å—Å–∞',
        description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ –∏ –¥–µ–ø–ª–æ—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Jenkins, Ansible –∏ Groovy.'
      },
      project2: {
        title: 'To-Do –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
        description: '–ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ React —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ö—É–∫–æ–≤ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.'
      },
      project3: {
        title: '–≠—Ç–æ—Ç —Å–∞–π—Ç-—Ä–µ–∑—é–º–µ',
        description: '–õ–∏—á–Ω—ã–π —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏, —Å—Ç–∏–ª—è–º–∏ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.'
      },
      project4: {
        title: 'Telegram Mini App (–¥–∏–ø–ª–æ–º)',
        description: '–°–ø—Ä–∞–≤–æ—á–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Telegram.'
      },
      project5: {
        title: '–í–∫–ª–∞–¥–∫–∞ "–ü–æ–º–æ—â—å"',
        description: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–¥–µ–ª–∞ —Å–ø—Ä–∞–≤–∫–∏ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.'
      }
    },
    experience: {
      workTitle: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã',
      educationTitle: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      company: '–õ–£–ö–û–ô–õ-–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      position: '–°—Ç–∞–∂–µ—Ä',
      duration: '–∏—é–Ω—å 2024 - –∞–ø—Ä–µ–ª—å 2025',
      devopsTasks: 'üõ† DevOps –∑–∞–¥–∞—á–∏:',
      frontendTasks: 'üíª Frontend –∑–∞–¥–∞—á–∏:',
      task1: '–ù–∞—Å—Ç—Ä–æ–∏–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–±–æ—Ä–∫—É –∏ –¥–µ–ø–ª–æ–π –∫–æ–¥–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Jenkins –∏ Ansible.',
      task2: '–í–Ω–µ–¥—Ä–∏–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∫–æ–¥–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∫–æ–º–º–∏—Ç–µ.',
      task3: '–†–∞–∑—Ä–∞–±–æ—Ç–∞–ª –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª Groovy-—Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è Jenkins.',
      task4: '–£–≥–ª—É–±–∏–ª –∑–Ω–∞–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–∏ Linux –∏ Windows —Å–µ—Ä–≤–µ—Ä–æ–≤.',
      task5: '–†–µ–∞–ª–∏–∑–æ–≤–∞–ª –≤–∫–ª–∞–¥–∫—É ¬´–ü–æ–º–æ—â—å¬ª –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.',
      task6: '–°–æ–∑–¥–∞–ª to-do –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React Hooks –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.',
      task7: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª Ant Design –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.',
      university: '–†–ì–£ –Ω–µ—Ñ—Ç–∏ –∏ –≥–∞–∑–∞ (–ù–ò–£) –∏–º–µ–Ω–∏ –ò.–ú. –ì—É–±–∫–∏–Ω–∞',
      degree: '–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
      eduDuration: '2021 - 2025',
      eduDescription: '–ü–æ—Å–ª–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ —è –ø–æ–ª—É—á–∏–ª –∫—Ä–µ–ø–∫–∏–µ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –æ' +
      '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —è–∑—ã–∫–∏, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏–ª–æ –º–Ω–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö.' +
      '–ü–æ–º–∏–º–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤, —è –Ω–∞—É—á–∏–ª—Å—è –¥–æ–±–∏–≤–∞—Ç—å—Å—è —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á.'
    },
    contact: {
      title: '–°—Å—ã–ª–∫–∏ –¥–ª—è —Å–≤—è–∑–∏',
      contactInfo: '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
      phone: '–¢–µ–ª–µ—Ñ–æ–Ω',
      email: '–ü–æ—á—Ç–∞',
      telegram: 'Telegram',
      resume: '–†–µ–∑—é–º–µ',
      downloadPdf: '–°–∫–∞—á–∞—Ç—å PDF',
      locationAvailability: '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å',
      location: '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      locationValue: '–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è',
      timezone: '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å',
      timezoneValue: 'UTC+3 (Moscow Time)',
      availability: '–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å',
      availabilityValue: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞, 9:00 - 18:00',
      professionalProfiles: 'Professional Profiles',
      github: 'GitHub',
      githubDesc: '–û–∑–Ω–∞–∫–æ–º—Ç–µ—Å—å —Å –º–æ–∏ GitHub –ø—Ä–æ—Ñ–∏–ª–µ–º',
      linkedin: 'LinkedIn',
      linkedinDesc: '–ú–æ—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ LinkedIn',
      contactInfoTitle: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–≤—è–∑–∏',
      contactInfoDesc: '–õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π ‚Äî —á–µ—Ä–µ–∑ Telegram –∏–ª–∏ email. –Ø —Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—á–∞—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ, –Ω–æ –≤ –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –æ—Ç–≤–µ—á–∞—é –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —á–∞—Å–æ–≤ –≤ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏.',
      collaborationTitle: '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞',
      collaborationDesc: '–ê–∫—Ç–∏–≤–Ω–æ –∏—â—É —Ä–∞–±–æ—Ç—É –∏ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π. –†–∞—Å—Å–º–æ—Ç—Ä—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö ‚Äì –±—É–¥—É —Ä–∞–¥ –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏.'
    }
  },
  en: {
    nav: {
      home: 'Home',
      projects: 'Projects',
      experience: 'Experience',
      contact: 'Contact'
    },
    home: {
      greeting: 'Hello! I\'m Kirill Tkachenko',
      position: 'Frontend Developer & DevOps Engineer',
      description: 'I create convenient, modern and beautiful interfaces, and also study deployment and automation processes. I already have some experience in development and strive to constantly improve my skills.',
      viewWork: 'View My Work',
      contact: 'Contact'
    },
    projects: {
      title: 'Projects',
      techStack: 'Tech Stack',
      project1: {
        title: 'CI/CD Process Setup',
        description: 'Build and deployment automation using Jenkins, Ansible and Groovy.'
      },
      project2: {
        title: 'To-Do Application',
        description: 'Simple React application using hooks and component approach.'
      },
      project3: {
        title: 'This Resume Website',
        description: 'Personal portfolio website with filters, styles and responsive interface.'
      },
      project4: {
        title: 'Telegram Mini App (thesis)',
        description: 'Reference web application for educational institution on Telegram platform.'
      },
      project5: {
        title: 'Help Tab',
        description: 'Help section functionality with nested levels and images display.'
      }
    },
    experience: {
      workTitle: 'Work Experience',
      educationTitle: 'Education',
      company: 'LUKOIL-Technologies',
      position: 'Intern',
      duration: 'June 2024 - April 2025',
      devopsTasks: 'üõ† DevOps tasks:',
      frontendTasks: 'üíª Frontend tasks:',
      task1: 'Set up automatic code build and deployment using Jenkins and Ansible.',
      task2: 'Implemented automatic code checking on every commit.',
      task3: 'Developed and optimized Groovy scripts for Jenkins.',
      task4: 'Deepened knowledge in Linux and Windows server administration.',
      task5: 'Implemented the "Help" tab in the web application.',
      task6: 'Created a to-do application using React Hooks and components.',
      task7: 'Used Ant Design to create responsive interface.',
      university: 'Gubkin Russian State University of Oil and Gas (National Research University)',
      degree: 'Integrated Information Automated Systems',
      eduDuration: '2021 - 2025',
      eduDescription: 'After graduating, I acquired strong foundational knowledge in ' +
      'programming and explored various technologies and languages, which helped me understand software development at different levels' +
      'Beyond technical skills, I learned to achieve my goals, regardless of the complexity of the tasks.'
    },
    contact: {
      title: 'Contact Links',
      contactInfo: 'Contact Information',
      phone: 'Phone',
      email: 'Email',
      telegram: 'Telegram',
      resume: 'Resume',
      downloadPdf: 'Download PDF',
      locationAvailability: 'Location and Availability',
      location: 'Location',
      locationValue: 'Dublin, Ireland',
      timezone: 'Timezone',
      timezoneValue: 'UTC+1 (Dublin Time)',
      availability: 'Availability',
      availabilityValue: 'Monday - Friday, 9:00 - 18:00',
      professionalProfiles: 'Professional Profiles',
      github: 'GitHub',
      githubDesc: 'Check out my GitHub profile',
      linkedin: 'LinkedIn',
      linkedinDesc: 'My LinkedIn page',
      contactInfoTitle: 'Contact Information',
      contactInfoDesc: 'The best way to contact me is via Telegram or email. I try to respond as quickly as possible, but at most I respond within a few hours on business days.',
      collaborationTitle: 'Collaboration Inquiries',
      collaborationDesc: 'Actively looking for work and open to all offers. I will consider cooperation opportunities in different formats - I will be happy to discuss the details.'
    }
  }
};

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const [language, setLanguage] = useState<Language>(getInitialLanguage);

  useEffect(() => {
    localStorage.setItem('language', language);
  }, [language]);

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'ru' ? 'en' : 'ru');
  };

  const t = (key: string): string => {
    const keys = key.split('.');
    let value: any = translations[language];
    
    for (const k of keys) {
      value = value?.[k];
    }
    
    return value || key;
  };

  return (
    <LanguageContext.Provider value={{ language, toggleLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
}

export function useLanguage() {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
}